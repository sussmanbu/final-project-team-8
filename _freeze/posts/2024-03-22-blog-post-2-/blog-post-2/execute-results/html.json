{
  "hash": "aeb2d7386b7ba86b72391e9e98427d4b",
  "result": {
    "markdown": "---\ntitle: \"Blog Post 2\"\neditor: visual\n---\n\n\n### Blog Post 2 - Reviewing Feedback and Data Exploration \n\nThroughout this week, we reviewed the feedback on our datasets. We decided that we would use our datasets on death rates via suicide and unemployment as supplementary evidence later on in our project. These two datasets are quite messy to use and proved challenging to sort/clean them to provide a compelling argument. We found a third supporting dataset from the World Bank on Gender. We also decided to focus on the ACS data on Educational Attainment concerning Gender and Race (i.e., the Professor also told us how to extract data from ACS directly via R). \n\nFrom the ACS dataset, we brainstormed some ideas we could further explore. Firstly, we want to give a brief overview of the data we collected by exhibiting trends over time (i.e., showing poverty rates over time, median earnings of women from different racial backgrounds), and see if there are improvements or regressions in the data. Secondly, we also decided to conduct a gender-pay gap analysis by analyzing median earnings for women and men within each racial group based on their educational attainment. Relating to education, we also want to investigate the educational attainment of genders concerning race by seeing the percentage of women in different levels of education. Lastly, to further explore the disparities between genders, we want to see the poverty rates of women in each racial group, based on educational attainment. Run the chunk below to view the ACS dataset: \n\n\n::: {.cell}\n\n```{.r .cell-code}\n##ACS Educational Attainment Dataset:\nlibrary(tidyverse)\n```\n\n::: {.cell-output .cell-output-stderr}\n```\n── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──\n✔ dplyr     1.1.4     ✔ readr     2.1.5\n✔ forcats   1.0.0     ✔ stringr   1.5.1\n✔ ggplot2   3.4.4     ✔ tibble    3.2.1\n✔ lubridate 1.9.3     ✔ tidyr     1.3.0\n✔ purrr     1.0.2     \n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ dplyr::filter() masks stats::filter()\n✖ dplyr::lag()    masks stats::lag()\nℹ Use the conflicted package (<http://conflicted.r-lib.org/>) to force all conflicts to become errors\n```\n:::\n\n```{.r .cell-code}\ndata1 = read_csv('dataset/ACS_dataset.csv')\n```\n\n::: {.cell-output .cell-output-stderr}\n```\nWarning: One or more parsing issues, call `problems()` on your data frame for details,\ne.g.:\n  dat <- vroom(...)\n  problems(dat)\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nRows: 392 Columns: 1\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr (1): ;;Alabama;;;;;;;;;;;;Alaska;;;;;;;;;;;;Arizona;;;;;;;;;;;;Arkansas;...\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n```\n:::\n\n```{.r .cell-code}\nview(data1)\n```\n:::\n\n\n\\\nThe World Bank dataset encapsulates a lot of data for many different categories including age-dependency ratios, population and birth rates, wage, and education. However, the World Bank data is not faceted by race. Additionally, there are also many NAs on certain measurements. We will probably use this data to compare with the ACS data to see averages and general correlations. Run the chunk below to view the World Bank Gender dataset: \n\n\n::: {.cell}\n\n```{.r .cell-code}\n##World Bank Gender Dataset: \nlibrary(tidyverse)\ndata2 = read_csv('dataset/USA_Gender_Stats.csv')\n```\n\n::: {.cell-output .cell-output-stderr}\n```\nNew names:\nRows: 1153 Columns: 70\n── Column specification\n──────────────────────────────────────────────────────── Delimiter: \",\" chr\n(4): Country.Name, Country.Code, Indicator.Name, Indicator.Code dbl (65): ...1,\nX1960, X1961, X1962, X1963, X1964, X1965, X1966, X1967, X196... lgl (1): X\nℹ Use `spec()` to retrieve the full column specification for this data. ℹ\nSpecify the column types or set `show_col_types = FALSE` to quiet this message.\n• `` -> `...1`\n```\n:::\n\n```{.r .cell-code}\nview(data2)\n```\n:::\n\n\n\\\n\n\\\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}